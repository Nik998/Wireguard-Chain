[Interface]
# VPN interface's IP address and subnet mask
Address = 10.10.10.3/32 # Change if needed

# Commands to run after the interface comes up
# Enable IP forwarding to allow the VPN to route traffic
PostUp = echo 1 > /proc/sys/net/ipv4/ip_forward
# Enable proxy ARP, allowing the machine to respond to ARP requests on behalf of other hosts
PostUp = echo 1 > /proc/sys/net/ipv4/conf/all/proxy_arp
# Add iptables rules to accept forwarded packets on the wg0 interface
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT && iptables -A FORWARD -o wg0 -j ACCEPT

# Commands to run before the interface goes down
# Remove iptables rules set in PostUp
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT && iptables -D FORWARD -o wg0 -j ACCEPT
# Disable IP forwarding and proxy ARP
PostDown = echo 0 > /proc/sys/net/ipv4/ip_forward
PostDown = echo 0 > /proc/sys/net/ipv4/conf/all/proxy_arp

# Port for WireGuard interface's incoming connections
ListenPort = 51820

# Private key for this WireGuard interface, replaced with a placeholder for security
PrivateKey = <private_key-of-interface>

# DNS servers for the VPN
DNS = 1.1.1.1, 8.8.8.8 # Change if needed

[Peer]
# Client
# Public key of the first client
PublicKey = <public_key-of-client>

# IP range allowed for the client
AllowedIPs = 10.10.10.4/32

[Peer]
# Public key of the gate
PublicKey = <public_key-of-gate>

# The IP range that is allowed for the gate, in this case, all IPs (0.0.0.0/0 routes all traffic through the VPN)
AllowedIPs = 0.0.0.0/0

# External endpoint of the gate: its IP address and port
Endpoint = <ip-of-gate>:<port-of-gate>
